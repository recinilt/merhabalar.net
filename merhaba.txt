git gui
rescan ile deðiþiklikler gözleniyor.
bir dosyadaki deðiþiklikleri, deðiþiklikler, üzerine týkladýðýmýzda, sarý kutucukta görebiliyoruz. deðiþiklik olmayan bölümler normal siyah yazý ile, çýkarýlan satýrlar - ile, eklenen satýrlar + ile gösteriliyor.
stage changed ile, tüm deðiþiklikleri indexe geçiþ bölgesine gönderiyoruz.
açýkllama girip commit diyerek de yedekleme tamamlanýyor.
deðiþikliklerden sadece birini indexe göndermek istiyorsan, sadece onun yazýsýnýn üzerine çift týkla.
veya da, deðiþmiþ dosyanýn ikonuna týklanýnca, indexe stageye geçiþ bölgesine gider. oraya gidip oradaki dosyanýn ikonuna týklanýnca da, geri unstaged changese gelir.
dosyanýn yazýsýna týklayýnca da, içindeki deðiþiklikleri görebiliriz. 

deðiþiklikleri geri almak.
rescan ile, unstaged changes teki bir dosyaya týklayýnca, saðda sarý alanda deðiþiklikler görülüyor. 
herhangi bir deðiþikliðe sað týklayýp;
sadece o satýrdaki deðiþikliðin geri gelmesini istiyorsak, revert line demeli;
tüm deðiþikliklerin geri dönmesi için ise revert hunk denmeli.
revert hunk deyince, dosya, unstaged changesten kaybolur. çünkü dosya eski son yedekli haline dönmüþtür. dýþarýdan o dosyaya girip kontrol edilebilir. eskisi gibidir.
bir dosya silinirse, silineni geri getirmek için, rescana basarýz, o dosyayý unstaged changeste görürürüz, commit baþlýðýndaki revert changes ctrl j ile o dosyayý geri getiririz. son kayda ulaþmýþ oluruz.

eski bir sürüme dönmek için, 
repository baþlýðýndan,
visualize masters history yi týklayýp;
bir versiyondaki deðiþikliðin geri alýnmasý için, o versiyona sað týklayýp, en alttaki revert this commit e týklýyoruz.
eðer ki eski bir sürüme tamamen geçmek istiyorsak, o versiyona sað týklayýp, 
reset master branch to here deyip, hard reset diyoruz.

projeyi githuba göndermek için,
github da new repository oluþturuluyor.
oluþturulan repository saðýndaki clone or download a týklayýnca, oranýn adresi çýkýyor.
mesela 
https://github.com/recinilt/merhabalar.net.git
bu adresi kopyalayýp,
git gui programýnda remote baþlýðýna týklayýp,
push týklayýp
arbitary locationa bu adresi yapýþtýrýp,
force owerrite a týklayýp,
push a týklayýnca, github giriþ bilgilerini ister, bunu girersin, ve de gönderir.
oradakilerin üzerine yazar.
sayfayý yenilediðinde deðiþiklikleri görürsün.

.gitignore
diye bir dosya oluþtur. bunu, visual studio code da yeni dosya oluþtur diye de yapabilirsin.
bu dosyayý aç.
içine, hangi dosyalarýn veya klasörlerin takip edilmemesini istiyorsan yaz.
mesela,þunlarý dersek, gizli / klasöründeki * herþey, ama ! yen.txt dýþýndaki. ondaki deðiþiklikler takip edilsin.
gizli/*

!gizli/yen.txt


githubdan projeyi veya deðiþikliði getirmek için,
remote baþlýðýnda, add ile, bir github adresi ve nicknamesi veriliyor.
sonra, remote, fetch from, nickname ile o adresteki deðiþiklikler getiriliyor.
sonra da merge, local merge, deðiþikliðe týklanarak yerele kaydediliyor.







